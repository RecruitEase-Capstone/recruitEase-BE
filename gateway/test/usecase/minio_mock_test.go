// Code generated by MockGen. DO NOT EDIT.
// Source: internal/utils/minio/minio.go
//
// Generated by this command:
//
//	mockgen -source=internal/utils/minio/minio.go -destination=test/usecase/minio_mock_test.go -package=usecase_test
//

// Package usecase_test is a generated GoMock package.
package usecase_test

import (
	context "context"
	io "io"
	reflect "reflect"

	minio "github.com/minio/minio-go/v7"
	gomock "go.uber.org/mock/gomock"
)

// MockIMinio is a mock of IMinio interface.
type MockIMinio struct {
	ctrl     *gomock.Controller
	recorder *MockIMinioMockRecorder
	isgomock struct{}
}

// MockIMinioMockRecorder is the mock recorder for MockIMinio.
type MockIMinioMockRecorder struct {
	mock *MockIMinio
}

// NewMockIMinio creates a new mock instance.
func NewMockIMinio(ctrl *gomock.Controller) *MockIMinio {
	mock := &MockIMinio{ctrl: ctrl}
	mock.recorder = &MockIMinioMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMinio) EXPECT() *MockIMinioMockRecorder {
	return m.recorder
}

// MakeBucket mocks base method.
func (m *MockIMinio) MakeBucket(ctx context.Context, bucketName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MakeBucket", ctx, bucketName)
	ret0, _ := ret[0].(error)
	return ret0
}

// MakeBucket indicates an expected call of MakeBucket.
func (mr *MockIMinioMockRecorder) MakeBucket(ctx, bucketName any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakeBucket", reflect.TypeOf((*MockIMinio)(nil).MakeBucket), ctx, bucketName)
}

// UploadPDF mocks base method.
func (m *MockIMinio) UploadPDF(ctx context.Context, bucketName, objectName string, reader io.Reader, fileSize int64) (minio.UploadInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadPDF", ctx, bucketName, objectName, reader, fileSize)
	ret0, _ := ret[0].(minio.UploadInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UploadPDF indicates an expected call of UploadPDF.
func (mr *MockIMinioMockRecorder) UploadPDF(ctx, bucketName, objectName, reader, fileSize any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadPDF", reflect.TypeOf((*MockIMinio)(nil).UploadPDF), ctx, bucketName, objectName, reader, fileSize)
}
